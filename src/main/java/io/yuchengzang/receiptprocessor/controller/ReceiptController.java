package io.yuchengzang.receiptprocessor.controller;

import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMapping;

import jakarta.validation.Valid;

import io.yuchengzang.receiptprocessor.service.ReceiptPointsService;
import io.yuchengzang.receiptprocessor.repository.ReceiptRepository;
import io.yuchengzang.receiptprocessor.model.Receipt;

@RestController
@RequestMapping("/receipts")
public class ReceiptController {

  // Create a logger for the ReceiptController class
  private static final Logger logger = LoggerFactory.getLogger(ReceiptController.class);

  // Create a repository and a service for the controller
  private final ReceiptRepository receiptRepository;
  private final ReceiptPointsService receiptPointsService;

  // Constructor injection for the service and repository
  public ReceiptController(ReceiptRepository receiptRepository, ReceiptPointsService receiptPointsService) {
    this.receiptRepository = receiptRepository;
    this.receiptPointsService = receiptPointsService;
  }

  /**
   * Add a receipt to the repository.
   *
   * This is mapped to the /receipts/process endpoint's POST method. Note that even though this API
   * endpoint is named "process", it is actually used to add a receipt to the repository. The points
   * calculation is done by the "/receipts/{id}/points" endpoint, allowing for lazy calculation of
   * points.
   *
   * @param receipt The receipt to be added to the system. This should be a JSON object representing
   *                the receipt, but the ID field of the incoming receipt will be ignored and will
   *                be ignored and generated by the system.
   * @return A response entity containing the ID of the receipt that was added.
   */
  @PostMapping("/process")
  public ResponseEntity<Object> addReceipt(@Valid @RequestBody Receipt receipt) {
    try {
      // Save the receipt to the repository
      receiptRepository.save(receipt);

      // Log the successful addition of the receipt
      logger.info("Receipt with ID '{}' added successfully.", receipt.getId());

      // Return a success response with HTTP 201 Created
      return ResponseEntity.status(HttpStatus.CREATED).body(Map.of("id", receipt.getId()));

    } catch (Exception e) {
      logger.error("Failed to save receipt: {}", e.getMessage());
      return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(
          Map.of("error", "Failed to process the receipt"));
    }
  }

}
